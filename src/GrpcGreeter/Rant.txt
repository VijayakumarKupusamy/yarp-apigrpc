1.Define gRPC (Unary)
	service UsersData {  
		rpc SaveUsers (UserRepeated) returns (UserResponse);;
	}

2.Define message
	message UserResponse {
	  string message = 1;
	}

3.Define Date,TimeSpan attributes in proto
message UserDetails{
	google.protobuf.Timestamp Accprofacceffectivefrom = 1;
	google.protobuf.Timestamp Accprofacceffectiveto=2;

	int32 Accprofaccexpdays=3;

	string Accprofaccneverexp=4;
	string Accprofconcurrentlogin=5;
	string Accprofdesignation=6;
	string Accprofpicture=7;
	string Department=8;
	string Displayname=9;
	string Email=10;
	string Emailnickname=11;
	string Lastname=12;
	string Middlename=13;
	string Mobilenumber=14;

	int32 Preferredlanguage=15;

	string Pwdprofforcechngpwdnextsignin=16;
	string Pwdprofiledisablepasswordexpiration=17;
	string Pwdprofiledisablestrongpassword=18;
	string Pwdprofileenforcechngpwdpolicy=19;
	string Pwdprofilepassword=20;
	string Userdescription=21;
	string Userextendedstatus=22;
	string Username=23;
	string WorkLocation=24;

} 
4.Define message with repeated fields(array)
message UserRepeated{
	repeated UserDetails UserDetails = 1; 
}
5.Define Server stream gRPC
service LocationData {
  rpc GetLocations (GetLocationsRequest) returns (stream GetLocationsResponse);
}
6.Discovery via reflection

7.Discovery via proto

8.Reading metaData 

9.Autherization in gRPC

10.Dynamic Discovery

11.L2 APIs

12.AppSettings json changes for kestral 
"Kestrel": {
    "EndpointDefaults": {
      "Protocols": "Http2"
    }
  }